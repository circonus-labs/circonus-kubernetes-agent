apiVersion: v1
kind: ConfigMap
metadata:
    # versioned, cadence independent of app version
    name: cka-config-v1
    namespace: {{ .Release.Namespace }}
    labels:
        app.kubernetes.io/name: circonus-kubernetes-agent
data:
    ## port to collect DNS metrics on (if DNS service does not have scrape/port annotations, such as on GKE)
    dns-metrics-port: {{ .Values.dns.port | quote }}
    ## broker to use when creating a new httptrap check
    circonus-check-broker-cid: {{ .Values.broker_cid | quote }}
    ## REQUIRED -- name identifying the cluster, used in the check 
    ## title and check target when check is created (so agent can find
    ## the check again when pod is re-deployed) also used in various
    ## tags on rules, contact group, etc.
    kubernetes-name: {{ .Values.kubernetes_name | quote }}
    ## see deploy/custom/configuration.yaml for more information
    metric-filters.json: |
      {
        "metric_filters": [
          ["allow", "^.+$", "tags", "and(collector:dynamic)", "NO_LOCAL_FILTER dynamically collected metrics"],
          ["allow", "^kubelet_.*$", "node metrics k8s v1.18+"],
          ["allow", "^machine_.*$", "node metrics k8s v1.18+"],
          ["allow", "^(container|node|pod)_.*$", "node metrics k8s v1.18+"],
          ["allow", "^prober_.*$", "node metrics/probes k8s v1.18+"],
          ["allow", "^[rt]x$", "tags", "and(resource:network,or(units:bytes,units:errors),not(container_name:*),not(sys_container:*))", "utilization"],
          ["allow", "^(used|capacity)$", "tags", "and(or(units:bytes,units:percent),or(resource:memory,resource:fs,volume_name:*),not(container_name:*),not(sys_container:*))", "utilization"],
          ["allow", "^usage(Milli|Nano)Cores$", "tags", "and(not(container_name:*),not(sys_container:*))", "utilization"],
          ["allow", "^resource_(request|limit)$", "resources"],
          ["allow", "^apiserver_request_total$", "tags", "and(or(code:5*,code:4*))", "api req errors"],
          ["allow", "^authenticated_user_requests$", "api auth"],
          ["allow", "^(kube_)?pod_container_status_(running|terminated|waiting|ready)(_count)?$", "containers"],
          ["allow", "^pod_container_status$", "containers"],
          ["allow", "^(kube_)?pod_container_status_(terminated|waiting)_reason(_count)?$", "containers health"],
          ["allow", "^(kube_)?pod_init_container_status_(terminated|waiting)_reason(_count)?$", "containers health"],
          ["allow", "^kube_deployment_(created|spec_replicas)$", "deployments"],
          ["allow", "^kube_deployment_status_(replicas|replicas_updated|replicas_available|replicas_unavailable)$", "deployments"],
          ["allow", "^kube_job_status_failed$", "health"],
          ["allow", "^kube_persistentvolume_status_phase$", "health"],
          ["allow", "^kube_deployment_status_replicas_unavailable$", "deployments"],
          ["allow", "^kube_hpa_(spec_max|status_current)_replicas$", "scale"],
          ["allow", "^kube_pod_start_time$", "pods"],
          ["allow", "^kube_pod_status_condition$", "pods"],
          ["allow", "^(kube_)?pod_status_phase(_count)?$", "tags", "and(or(phase:Running,phase:Pending,phase:Failed,phase:Succeeded))", "pods"],
          ["allow", "^pod_status_phase$", "pods"],
          ["allow", "^(kube_)?pod_status_(ready|scheduled)(_count)?$", "tags", "and(condition:true)", "pods"],
          ["allow", "^pod_status_(ready|scheduled)$", "pods"],
          ["allow", "^kube_(service_labels|deployment_labels|pod_container_info|pod_deleted)$", "ksm inventory"],
          ["allow", "^(node|kubelet_running_pod_count|Ready)$", "nodes"],
          ["allow", "^NetworkUnavailable$", "node status"],
          ["allow", "^kube_node_status_condition$", "node status health"],
          ["allow", "^(Disk|Memory|PID)Pressure$", "node status"],
          ["allow", "^capacity_.*$", "node capacity"],
          ["allow", "^kube_namespace_status_phase$", "tags", "and(or(phase:Active,phase:Terminating))", "namespaces"],
          ["allow", "^utilization$", "utilization health"],
          ["allow", "^kube_deployment_(metadata|status_observed)_generation$", "health"],
          ["allow", "^kube_daemonset_status_(current|desired)_number_scheduled$", "health"],
          ["allow", "^kube_statefulset_status_(replicas|replicas_ready)$", "health"],
          ["allow", "^deployment_generation_delta$", "health"],
          ["allow", "^daemonset_scheduled_delta$", "health"],
          ["allow", "^statefulset_replica_delta$", "health"],
          ["allow", "^coredns_(dns|forward)_request_(count_total|duration_seconds_avg)$", "dns health"],
          ["allow", "^coredns_(dns|forward)_response_rcode_count_total$", "dns health"],
          ["allow", "^kubedns*","dns health"],
          ["allow", "^events$", "events"],
          ["allow", "^collect_.*$", "agent collection stats"],
          ["allow", "^authentication_attempts$", "api auth health"],
          ["deny", "^.+$", "all other metrics"]
        ]
      }
    ##
    ## alert configuration
    ##
    ## REQUIRED -- contact.email (if not supplied, alerting and some dashboard functionality will be disabled)
    ##
    default-alerts.json: |
      {
        "contact": {
          "email": {{ .Values.contact_email | quote }}
        },
        "rule_settings": { 
          "crashloops_container": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "crashloops_init_container": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "cpu_utilization": {
            "disabled": true,
            "threshold": "75",
            "window": 900
          },
          "disk_pressure": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "memory_pressure": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "pid_pressure": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "network_unavailable": {
            "disabled": true,
            "threshold": "0.99",
            "window": 300
          },
          "job_failures": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "persistent_volume_failures": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "pod_pending_delays": {
            "disabled": true,
            "threshold": "0.99",
            "window": 900
          },
          "deployment_glitches": {
            "disabled": true,
            "min_threshold": "0",
            "min_window": 300,
            "max_threshold": "0",
            "max_window": 300
          },
          "daemonsets_not_ready": {
            "disabled": true,
            "min_threshold": "0",
            "min_window": 300,
            "max_threshold": "0",
            "max_window": 300
          },
          "statefulsets_not_ready": {
            "disabled": true,
            "min_threshold": "0",
            "min_window": 300,
            "max_threshold": "0",
            "max_window": 300
          }
        }
      }
