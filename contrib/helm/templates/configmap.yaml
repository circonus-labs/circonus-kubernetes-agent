apiVersion: v1
kind: ConfigMap
metadata:
    # versioned, cadence independent of app version
    name: cka-config-v1
    namespace: {{ .Release.Namespace }}
    labels:
        app.kubernetes.io/name: circonus-kubernetes-agent
data:
    ## port to collect DNS metrics on (if DNS service does not have scrape/port annotations, such as on GKE)
    dns-metrics-port: {{ .Values.dns.port | quote }}
    ## broker to use when creating a new httptrap check
    circonus-check-broker-cid: {{ .Values.broker_cid | quote }}
    ## REQUIRED -- name identifying the cluster, used in the check 
    ## title and check target when check is created (so agent can find
    ## the check again when pod is re-deployed) also used in various
    ## tags on rules, contact group, etc.
    kubernetes-name: {{ .Values.kubernetes_name | quote }}
    ## see deploy/custom/configuration.yaml for more information
    ##
    ## alert configuration
    ##
    ## REQUIRED -- contact.email (if not supplied, alerting and some dashboard functionality will be disabled)
    ##
    default-alerts.json: |
      {
        "contact": {
          "email": {{ .Values.contact_email | quote }}
        },
        "rule_settings": { 
          "crashloops_container": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "crashloops_init_container": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "cpu_utilization": {
            "disabled": true,
            "threshold": "75",
            "window": 900
          },
          "disk_pressure": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "memory_pressure": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "pid_pressure": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "network_unavailable": {
            "disabled": true,
            "threshold": "0.99",
            "window": 300
          },
          "job_failures": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "persistent_volume_failures": {
            "disabled": true,
            "threshold": "0",
            "window": 300
          },
          "pod_pending_delays": {
            "disabled": true,
            "threshold": "0.99",
            "window": 900
          },
          "deployment_glitches": {
            "disabled": true,
            "min_threshold": "0",
            "min_window": 300,
            "max_threshold": "0",
            "max_window": 300
          },
          "daemonsets_not_ready": {
            "disabled": true,
            "min_threshold": "0",
            "min_window": 300,
            "max_threshold": "0",
            "max_window": 300
          },
          "statefulsets_not_ready": {
            "disabled": true,
            "min_threshold": "0",
            "min_window": 300,
            "max_threshold": "0",
            "max_window": 300
          }
        }
      }
